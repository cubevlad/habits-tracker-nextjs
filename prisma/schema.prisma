generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  email     String   @unique
  name      String
  role      Role     @default(USER)
  password  String
  Token     Token[]
  Note      Note[]
  Habit     Habit[]
}

model Token {
  token  String
  user   User?  @relation(fields: [userId], references: [id])
  userId String @id
}

model Note {
  id         String   @id @default(uuid())
  createdAt  DateTime @default(now())
  modifiedAt DateTime @default(now())
  content    String
  user       User     @relation(fields: [userId], references: [id])
  userId     String
}

model Habit {
  id          String   @id @default(uuid())
  name        String
  description String?
  goal        Int
  startedAt   DateTime @default(now())
  archivedAt  DateTime @default(now())
  status      Int      @default(1)
  user        User     @relation(fields: [userId], references: [id])
  userId      String
  records     Record[]
}

model Record {
  id      String   @unique @default(uuid())
  done    Boolean  @default(false)
  habit   Habit    @relation(fields: [habitId], references: [id], onDelete: Cascade)
  habitId String
  date    DateTime
}

enum Role {
  USER
  ADMIN
}
